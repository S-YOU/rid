// Code generated by MockGen. DO NOT EDIT.
// Source: config.go

package repository

import (
	model "github.com/creasty/rid/pkg/domain/model"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockConfigRepository is a mock of ConfigRepository interface
type MockConfigRepository struct {
	ctrl     *gomock.Controller
	recorder *MockConfigRepositoryMockRecorder
}

// MockConfigRepositoryMockRecorder is the mock recorder for MockConfigRepository
type MockConfigRepositoryMockRecorder struct {
	mock *MockConfigRepository
}

// NewMockConfigRepository creates a new mock instance
func NewMockConfigRepository(ctrl *gomock.Controller) *MockConfigRepository {
	mock := &MockConfigRepository{ctrl: ctrl}
	mock.recorder = &MockConfigRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (_m *MockConfigRepository) EXPECT() *MockConfigRepositoryMockRecorder {
	return _m.recorder
}

// Get mocks base method
func (_m *MockConfigRepository) Get() (*model.Config, error) {
	ret := _m.ctrl.Call(_m, "Get")
	ret0, _ := ret[0].(*model.Config)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get
func (_mr *MockConfigRepositoryMockRecorder) Get() *gomock.Call {
	return _mr.mock.ctrl.RecordCallWithMethodType(_mr.mock, "Get", reflect.TypeOf((*MockConfigRepository)(nil).Get))
}
